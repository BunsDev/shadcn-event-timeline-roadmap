{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "vertical-event-timeline",
  "type": "registry:block",
  "title": "Vertical Event Timeline",
  "description": "shadcn/ui vertical event timeline and roadmap block",
  "registryDependencies": [
    "badge",
    "card"
  ],
  "files": [
    {
      "path": "src/app/vertical/page.tsx",
      "content": "\"use client\";\n\nimport { useState } from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { ChevronDown, Briefcase, Calendar, CheckCircle } from \"lucide-react\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Events } from \"@/types/events\";\nimport { events } from \"@/data/events\";\n\nexport default function VerticalEventTimeline() {\n  const [expandedIndex, setExpandedIndex] = useState<number | null>(0);\n\n  const toggleExpand = (index: number) => {\n    if (expandedIndex === index) {\n      setExpandedIndex(null);\n    } else {\n      setExpandedIndex(null);\n      const timer = setTimeout(() => {\n        setExpandedIndex(index);\n        clearTimeout(timer);\n      }, 300); // Match this with your exit animation duration\n    }\n  };\n\n  // Helper function to format period\n  const formatPeriod = (item: Events[0]) => {\n    if (item.periodType === \"Q\") {\n      return `Q${item.periodNumber} ${item.year}`;\n    } else if (item.periodType === \"H\") {\n      return `H${item.periodNumber} ${item.year}`;\n    }\n    return `${item.year}`;\n  };\n\n  return (\n    <div className=\"mx-auto px-4 py-12 max-w-5xl\">\n      <motion.h1\n        className=\"text-3xl md:text-4xl font-bold mb-2 text-center\"\n        initial={{ opacity: 0, y: -20 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.5 }}\n      >\n        Project Timeline\n      </motion.h1>\n\n      <motion.p\n        className=\"text-muted-foreground text-center mb-12\"\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n        transition={{ duration: 0.5, delay: 0.2 }}\n      >\n        Our development journey and milestones\n      </motion.p>\n\n      <div className=\"relative\">\n        {/* Timeline line */}\n        <div className=\"absolute left-0 md:left-1/2 transform md:-translate-x-1/2 h-full w-0.5 bg-primary/20 z-0\"></div>\n\n        {events.map((item, index) => (\n          <motion.div\n            key={index}\n            className={`mb-12 relative z-10 flex flex-col ${\n              index % 2 === 0 ? \"md:flex-row\" : \"md:flex-row-reverse\"\n            }`}\n            initial={{ opacity: 0, y: 50 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.5, delay: index * 0.2 }}\n          >\n            {/* Timeline dot */}\n            <div className=\"absolute left-0 md:left-1/2 transform -translate-x-1/2 w-6 h-6 rounded-full bg-primary z-10\"></div>\n\n            {/* Date badge - visible on mobile and on appropriate side for desktop */}\n            <div\n              className={`md:w-1/2 flex ${\n                index % 2 === 0\n                  ? \"md:justify-end md:pr-8\"\n                  : \"md:justify-start md:pl-8\"\n              }`}\n            >\n              <motion.div className=\"mb-4 md:mb-0\" whileHover={{ scale: 1.05 }}>\n                <Badge\n                  variant=\"outline\"\n                  className=\"text-sm py-1 px-3 bg-primary/5 border-primary/20\"\n                >\n                  <Calendar className=\"w-4 h-4 mr-1\" />\n                  {formatPeriod(item)}\n                </Badge>\n              </motion.div>\n            </div>\n\n            {/* Card - takes full width on mobile, half width on desktop */}\n            <div\n              className={`md:w-1/2 ${index % 2 === 0 ? \"md:pl-8\" : \"md:pr-8\"}`}\n            >\n              <motion.div\n                layout\n                className=\"w-full\"\n                initial={{ scale: 0.95 }}\n                animate={{ scale: 1 }}\n                transition={{ duration: 0.3 }}\n              >\n                <Card className=\"overflow-hidden border-primary/10 shadow-lg hover:shadow-xl transition-shadow duration-300\">\n                  <CardContent className=\"p-0\">\n                    <div\n                      className=\"p-6 cursor-pointer flex justify-between items-center\"\n                      onClick={() => toggleExpand(index)}\n                    >\n                      <div>\n                        <h3 className=\"text-xl font-bold text-primary\">\n                          {item.year} Milestones\n                        </h3>\n                        <p className=\"text-lg font-medium\">\n                          {item.periodType === \"Q\"\n                            ? `Quarter ${item.periodNumber}`\n                            : `Half ${item.periodNumber}`}\n                        </p>\n                        <div className=\"flex items-center text-sm text-muted-foreground mt-1\">\n                          <CheckCircle\n                            className={`w-4 h-4 mr-1 ${\n                              item.isChecked\n                                ? \"text-green-500\"\n                                : \"text-gray-400\"\n                            }`}\n                          />\n                          {item.isChecked ? \"Completed\" : \"Planned\"}\n                        </div>\n                      </div>\n                      <motion.div\n                        animate={{ rotate: expandedIndex === index ? 180 : 0 }}\n                        transition={{ duration: 0.3 }}\n                      >\n                        <ChevronDown className=\"w-5 h-5 text-muted-foreground\" />\n                      </motion.div>\n                    </div>\n\n                    <AnimatePresence>\n                      {expandedIndex === index && (\n                        <motion.div\n                          initial={{ height: 0, opacity: 0 }}\n                          animate={{ height: \"auto\", opacity: 1 }}\n                          exit={{ height: 0, opacity: 0 }}\n                          transition={{ duration: 0.3 }}\n                          className=\"overflow-hidden\"\n                        >\n                          <div className=\"px-6 pb-6 pt-2 border-t border-border/50\">\n                            <div className=\"mb-4\">\n                              <h4 className=\"text-sm font-semibold flex items-center mb-2\">\n                                <Briefcase className=\"w-4 h-4 mr-2 text-primary\" />\n                                Events\n                              </h4>\n                              <ul className=\"grid grid-cols-1 gap-2\">\n                                {item.events.map((event, i) => (\n                                  <motion.li\n                                    key={i}\n                                    className=\"flex items-start\"\n                                    initial={{ opacity: 0, x: -10 }}\n                                    animate={{ opacity: 1, x: 0 }}\n                                    transition={{\n                                      duration: 0.3,\n                                      delay: i * 0.1,\n                                    }}\n                                  >\n                                    <CheckCircle\n                                      className={`w-4 h-4 mr-2 ${\n                                        event.isChecked\n                                          ? \"text-green-500\"\n                                          : \"text-gray-400\"\n                                      } mt-0.5 shrink-0`}\n                                    />\n                                    <span className=\"text-sm\">\n                                      {event.title}\n                                    </span>\n                                  </motion.li>\n                                ))}\n                              </ul>\n                            </div>\n                          </div>\n                        </motion.div>\n                      )}\n                    </AnimatePresence>\n                  </CardContent>\n                </Card>\n              </motion.div>\n            </div>\n          </motion.div>\n        ))}\n      </div>\n    </div>\n  );\n}\n",
      "type": "registry:component",
      "target": "components/vertical-event-timeline.tsx"
    }
  ]
}